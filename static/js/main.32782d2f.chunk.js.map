{"version":3,"sources":["Modal.js","Components/PokemonCards.js","Components/Pokemon.js","PokemonApp.js","index.js"],"names":["Modal","pokeInfo","showModal","setShowModal","modalRef","useRef","keyPress","useCallback","e","key","console","log","useEffect","document","addEventListener","removeEventListener","length","className","onClick","current","target","ref","src","sprites","other","dream_world","front_default","alt","name","id","types","type","stats","base_stat","prev","PokemonCards","image","useState","pokemonDetails","setPokemonDetails","axios","get","then","resp","data","getPokemonDetails","Pokemon","props","pokemon","img","hp","attack","defence","PokemonApp","url","listPokemon","setListPokemon","pokemonName","setPokemonName","pokemonSelected","setPokemonSelected","searchPokemon","setSearchPokemon","a","fetch","responce","json","resultData","results","forEach","newUrl","prevData","fetchPokemonDetails","getListPokemon","style","textAlign","value","placeholder","onChange","window","alert","map","index","backgroundColor","cursor","marginTop","marginBottom","i","randomArray","val","Math","floor","random","push","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.32782d2f.chunk.js","sourcesContent":["import React, { useRef, useEffect, useCallback } from 'react';\r\nimport './pokemonStyle.css';\r\n\r\n\r\nexport const Modal = ({pokeInfo, showModal, setShowModal }) => {\r\n  const modalRef = useRef();\r\n\r\n  const closeModal = e => {\r\n    if (modalRef.current === e.target) {\r\n      setShowModal(false);\r\n    }\r\n  };\r\n\r\n  const keyPress = useCallback(\r\n    e => {\r\n      if (e.key === 'Escape' && showModal) {\r\n        setShowModal(false);\r\n        console.log('I pressed');\r\n      }\r\n    },\r\n    [setShowModal, showModal]\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      document.addEventListener('keydown', keyPress);\r\n      return () => document.removeEventListener('keydown', keyPress);\r\n    },\r\n    [keyPress]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {(showModal && pokeInfo.length !== 0)  ? (\r\n        <div className=\"background\" onClick={closeModal} ref={modalRef}>\r\n            <div className=\"ModalWrapper\" showModal={showModal}>\r\n              <img className=\"ModalImg\" src={pokeInfo.sprites.other.dream_world.front_default} alt={pokeInfo.name} />\r\n              <div className=\"ModalContent\">\r\n                <h1>Id: #0{pokeInfo.id}</h1>\r\n                <h1>Name: {pokeInfo.name} </h1>\r\n                <h2>Type: {pokeInfo.types[0].type.name} </h2>\r\n                <h3>hp: {pokeInfo.stats[0].base_stat} </h3>\r\n                <h3>Attack: {pokeInfo.stats[1].base_stat} </h3>\r\n                <h3>Defence: {pokeInfo.stats[2].base_stat} </h3>\r\n              </div>\r\n              <button className=\"close-button\"\r\n                aria-label='Close modal'\r\n                onClick={() => setShowModal(prev => !prev)}\r\n              > Close </button>\r\n            </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};","import React, {useState} from 'react';\r\nimport '../pokemonStyle.css';\r\nimport axios from \"axios\";\r\nimport { Modal } from '../Modal';\r\n\r\nfunction PokemonCards({id,name,type,image}){\r\n    const [pokemonDetails, setPokemonDetails] = useState([]);\r\n    const [showModal, setShowModal] = useState(false) \r\n\r\n    const getPokemonDetails = (name) => {\r\n            axios.get(`https://pokeapi.co/api/v2/pokemon/${name}`)\r\n                    .then((resp) =>{\r\n                        setPokemonDetails(resp.data);\r\n                    });\r\n                    \r\n            setShowModal(prev => !prev);    \r\n    }\r\n\r\n    return (\r\n        <>\r\n        {\r\n            showModal ? <Modal pokeInfo={pokemonDetails} showModal={showModal} setShowModal={setShowModal} />:\r\n            <div className='pokemon-card' onClick={() => getPokemonDetails(name)}>\r\n                    <div className=\"number\"><small>#0{id}</small></div>\r\n                    <img src={image} alt={name} />\r\n                    <div className=\"detail-wrapper\">\r\n                        <h3>{name}</h3>\r\n                        <small>attack: {type}</small>\r\n                    </div>\r\n            </div>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PokemonCards\r\n","import React from 'react'\r\n\r\nfunction Pokemon(props) {\r\n    return (\r\n        <div className='pokemon-card'>\r\n        <div className=\"number\"><small>#0{props.pokemon.id}</small></div>\r\n        <img src={props.pokemon.img} alt={props.pokemon.name} />\r\n        <div className=\"detail-wrapper\">\r\n            <h3>{props.pokemon.name}</h3>\r\n            <h4>Type: {props.pokemon.type} </h4>\r\n            <small>hp: {props.pokemon.hp}</small>\r\n            <small>attack: {props.pokemon.attack}</small>\r\n            <small>defence: {props.pokemon.defence}</small>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Pokemon\r\n","import React, { useState, useEffect } from 'react';\r\nimport PokemonCards from './Components/PokemonCards';\r\nimport axios from \"axios\";\r\nimport './pokemonStyle.css';\r\nimport Pokemon from './Components/Pokemon';\r\n\r\n\r\nfunction PokemonApp() {\r\n    const url = 'https://pokeapi.co/api/v2/pokemon?limit=10';\r\n\r\n    const [listPokemon, setListPokemon] = useState([]);\r\n    const [pokemonName, setPokemonName] = useState('');\r\n    const [pokemonSelected, setPokemonSelected] = useState(false);\r\n    const [searchPokemon, setSearchPokemon] = useState({\r\n        name:'',\r\n        id:'',\r\n        img:'',\r\n        hp:'',\r\n        attack:'',\r\n        defence:'',\r\n        type:''\r\n    });\r\n\r\n    async function getListPokemon(){\r\n        const responce = await fetch(url);\r\n        const resultData = await responce.json();\r\n\r\n        const fetchPokemonDetails = results => {\r\n            results.forEach( async (data) => {\r\n                const newUrl = `https://pokeapi.co/api/v2/pokemon/${data.name}`;\r\n                const responce  = await fetch(newUrl);\r\n                const resultData = await responce.json();\r\n\r\n                setListPokemon( prevData => [...prevData, resultData]); \r\n            });\r\n        }\r\n        fetchPokemonDetails(resultData.results);\r\n    }\r\n    useEffect(() => {\r\n        getListPokemon();\r\n    }, [])\r\n\r\n    const newPokemon = (e) =>{\r\n        setPokemonName(e.target.value);\r\n    }\r\n    const getPokemon = () =>{\r\n        if(pokemonName){\r\n         axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemonName}`)\r\n                    .then((resp) =>{\r\n                        setSearchPokemon({\r\n                            name:resp.data.name,\r\n                            id:resp.data.id,\r\n                            img:resp.data.sprites.other.dream_world.front_default,\r\n                            hp:resp.data.stats[0].base_stat,\r\n                            attack:resp.data.stats[1].base_stat,\r\n                            defence:resp.data.stats[2].base_stat,\r\n                            type:resp.data.types[0].type.name\r\n\r\n                        });\r\n                        setPokemonSelected(true);\r\n                        setPokemonName('');\r\n                    });\r\n            }else{\r\n                window.alert(\"Please enter pokemon name or id to search\");\r\n            }\r\n    }\r\n\r\n    const reload = () =>{\r\n        setListPokemon([]);\r\n        for (var a=[],i=0;i<150;++i) a[i]=i;\r\n        const ARRAY_LENGTH = 10\r\n        const randomArray = []\r\n        for(let i = 0; i<ARRAY_LENGTH; i++) {\r\n            var val = a[Math.floor(Math.random()*a.length)];\r\n            randomArray.push(val);\r\n        }\r\n        randomArray.forEach( async (data) => {\r\n            const newUrl = `https://pokeapi.co/api/v2/pokemon/${data}`;\r\n            const responce  = await fetch(newUrl);\r\n            const resultData = await responce.json();\r\n\r\n            setListPokemon( prevData => [...prevData, resultData]); \r\n        });\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"app-container\">\r\n            <h3 style={{textAlign:\"center\"}}>POKEMON CARDS </h3>\r\n            <div className=\"search\">\r\n            <input type=\"text\"\r\n                    value={pokemonName}\r\n                    placeholder=\" Search pokemon\"\r\n                    name=\"search\" \r\n                    onChange={newPokemon}\r\n                    />\r\n            <button className=\"btn btn-primary\" onClick={getPokemon}>search</button>\r\n             <div className=\"container\">\r\n                 {!pokemonSelected ? null:<Pokemon pokemon = {searchPokemon} />}\r\n             </div>\r\n            </div> \r\n        <div className=\"pokemon-container\">\r\n            <div className=\"all-container\">\r\n                { listPokemon.map((pokemon, index) => \r\n                    <PokemonCards \r\n                        key= {index}\r\n                        id = {pokemon.id}\r\n                        image= {pokemon.sprites.other.dream_world.front_default}\r\n                        name= {pokemon.name}\r\n                        type= {pokemon.types[0].type.name}\r\n                    />\r\n                )}\r\n            </div>\r\n            <button style={{backgroundColor:\"greenyellow\", cursor: \"pointer\", marginTop:\"15px\", marginBottom:\"15px\"}} \r\n            type=\"btn btn-secondary\" \r\n            onClick={reload}>\r\n            Reload \r\n            </button>\r\n        </div>  \r\n        </div>    \r\n        </>\r\n    )\r\n}\r\n\r\nexport default PokemonApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport PokemonApp from './PokemonApp'\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <PokemonApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}